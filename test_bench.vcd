$date
	Tue May 23 17:24:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_bench $end
$var wire 16 ! reg3 [15:0] $end
$var wire 16 " reg2 [15:0] $end
$var wire 16 # reg1 [15:0] $end
$var wire 16 $ reg0 [15:0] $end
$var wire 1 % done $end
$var wire 4 & curr_state [3:0] $end
$var wire 16 ' B [15:0] $end
$var wire 9 ( A [8:0] $end
$var reg 1 ) Clkin $end
$var reg 1 * Reset $end
$var reg 4 + count [3:0] $end
$var reg 1 , start $end
$scope module cpu_lol $end
$var wire 16 - bus [15:0] $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 1 , start $end
$var wire 4 . state [3:0] $end
$var wire 16 / result [15:0] $end
$var wire 16 0 regG_tri [15:0] $end
$var wire 16 1 regA_output [15:0] $end
$var wire 16 2 reg7_tri [15:0] $end
$var wire 16 3 reg6_tri [15:0] $end
$var wire 16 4 reg5_tri [15:0] $end
$var wire 16 5 reg4_tri [15:0] $end
$var wire 16 6 reg3_tri [15:0] $end
$var wire 16 7 reg2_tri [15:0] $end
$var wire 16 8 reg1_tri [15:0] $end
$var wire 16 9 reg0_tri [15:0] $end
$var wire 8 : out_reg [7:0] $end
$var wire 9 ; instruction [8:0] $end
$var wire 8 < in_reg [7:0] $end
$var wire 1 % done $end
$var wire 16 = data_var [15:0] $end
$var wire 1 > data $end
$var wire 1 ? Gout $end
$var wire 1 @ Gin $end
$var wire 1 A Ain $end
$scope module buf0 $end
$var wire 1 B enable $end
$var wire 16 C a [15:0] $end
$var reg 16 D b [15:0] $end
$upscope $end
$scope module buf1 $end
$var wire 1 E enable $end
$var wire 16 F a [15:0] $end
$var reg 16 G b [15:0] $end
$upscope $end
$scope module buf2 $end
$var wire 1 H enable $end
$var wire 16 I a [15:0] $end
$var reg 16 J b [15:0] $end
$upscope $end
$scope module buf3 $end
$var wire 1 K enable $end
$var wire 16 L a [15:0] $end
$var reg 16 M b [15:0] $end
$upscope $end
$scope module buf4 $end
$var wire 1 N enable $end
$var wire 16 O a [15:0] $end
$var reg 16 P b [15:0] $end
$upscope $end
$scope module buf5 $end
$var wire 1 Q enable $end
$var wire 16 R a [15:0] $end
$var reg 16 S b [15:0] $end
$upscope $end
$scope module buf6 $end
$var wire 1 T enable $end
$var wire 16 U a [15:0] $end
$var reg 16 V b [15:0] $end
$upscope $end
$scope module buf7 $end
$var wire 1 W enable $end
$var wire 16 X a [15:0] $end
$var reg 16 Y b [15:0] $end
$upscope $end
$scope module bufData $end
$var wire 1 > enable $end
$var wire 16 Z a [15:0] $end
$var reg 16 [ b [15:0] $end
$upscope $end
$scope module bufG $end
$var wire 1 ? enable $end
$var wire 16 \ a [15:0] $end
$var reg 16 ] b [15:0] $end
$upscope $end
$scope module calculator $end
$var wire 16 ^ B [15:0] $end
$var wire 1 ) clk $end
$var wire 9 _ instr [8:0] $end
$var wire 16 ` A [15:0] $end
$var reg 16 a result [15:0] $end
$upscope $end
$scope module control $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 1 , start $end
$var wire 3 b sel_reg_out [2:0] $end
$var wire 3 c sel_reg_in [2:0] $end
$var wire 3 d ry [2:0] $end
$var wire 3 e rx [2:0] $end
$var wire 8 f out_reg [7:0] $end
$var wire 4 g next_state [3:0] $end
$var wire 3 h instruction_code [2:0] $end
$var wire 9 i instruction [8:0] $end
$var wire 8 j in_reg [7:0] $end
$var wire 4 k curr_state [3:0] $end
$var reg 1 A Ain $end
$var reg 1 @ Gin $end
$var reg 1 ? Gout $end
$var reg 1 l Rin $end
$var reg 1 m Rout $end
$var reg 1 > data $end
$var reg 1 % done $end
$var reg 1 n sig1 $end
$var reg 1 o sig2 $end
$scope module in_mux $end
$var wire 1 o sel $end
$var wire 3 p b [2:0] $end
$var wire 3 q a [2:0] $end
$var reg 3 r chosen [2:0] $end
$upscope $end
$scope module next $end
$var wire 4 s state [3:0] $end
$var wire 3 t instruction_code [2:0] $end
$var reg 4 u next_state [3:0] $end
$upscope $end
$scope module opcode $end
$var wire 9 v instruction [8:0] $end
$var reg 3 w instruction_code [2:0] $end
$var reg 3 x rx [2:0] $end
$var reg 3 y ry [2:0] $end
$upscope $end
$scope module out_mux $end
$var wire 3 z a [2:0] $end
$var wire 3 { b [2:0] $end
$var wire 1 n sel $end
$var reg 3 | chosen [2:0] $end
$upscope $end
$scope module reg_in $end
$var wire 3 } reg_code [2:0] $end
$var wire 1 l signal $end
$var reg 8 ~ out [7:0] $end
$upscope $end
$scope module reg_out $end
$var wire 3 !" reg_code [2:0] $end
$var wire 1 m signal $end
$var reg 8 "" out [7:0] $end
$upscope $end
$scope module state_reg $end
$var wire 4 #" D [3:0] $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var reg 4 $" Q [3:0] $end
$upscope $end
$upscope $end
$scope module reg0 $end
$var wire 16 %" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 &" enable $end
$var wire 1 * rst $end
$var reg 16 '" Q [15:0] $end
$upscope $end
$scope module reg1 $end
$var wire 16 (" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 )" enable $end
$var wire 1 * rst $end
$var reg 16 *" Q [15:0] $end
$upscope $end
$scope module reg2 $end
$var wire 16 +" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 ," enable $end
$var wire 1 * rst $end
$var reg 16 -" Q [15:0] $end
$upscope $end
$scope module reg3 $end
$var wire 16 ." D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 /" enable $end
$var wire 1 * rst $end
$var reg 16 0" Q [15:0] $end
$upscope $end
$scope module reg4 $end
$var wire 16 1" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 2" enable $end
$var wire 1 * rst $end
$var reg 16 3" Q [15:0] $end
$upscope $end
$scope module reg5 $end
$var wire 16 4" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 5" enable $end
$var wire 1 * rst $end
$var reg 16 6" Q [15:0] $end
$upscope $end
$scope module reg6 $end
$var wire 16 7" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 8" enable $end
$var wire 1 * rst $end
$var reg 16 9" Q [15:0] $end
$upscope $end
$scope module reg7 $end
$var wire 16 :" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 ;" enable $end
$var wire 1 * rst $end
$var reg 16 <" Q [15:0] $end
$upscope $end
$scope module regA $end
$var wire 16 =" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 A enable $end
$var wire 1 * rst $end
$var reg 16 >" Q [15:0] $end
$upscope $end
$scope module regG $end
$var wire 16 ?" D [15:0] $end
$var wire 1 ) clk $end
$var wire 1 @ enable $end
$var wire 1 * rst $end
$var reg 16 @" Q [15:0] $end
$upscope $end
$upscope $end
$scope module program3 $end
$var wire 1 A" clk $end
$var wire 1 % step $end
$var reg 16 B" data_var [15:0] $end
$var reg 9 C" instruction [8:0] $end
$var reg 8 D" read_address [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 D"
b0 C"
b1 B"
zA"
b0 @"
bx ?"
b0 >"
bz ="
b0 <"
0;"
bz :"
b0 9"
08"
bz 7"
b0 6"
05"
bz 4"
b0 3"
02"
bz 1"
b0 0"
0/"
bz ."
b0 -"
0,"
bz +"
b0 *"
0)"
bz ("
b0 '"
0&"
bz %"
b0 $"
b1 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b1 u
b0 t
b0 s
b0 r
b0 q
b0 p
0o
0n
0m
0l
b0 k
b0 j
b0 i
b0 h
b1 g
b0 f
b0 e
b0 d
b0 c
b0 b
bx a
b0 `
b0 _
bz ^
bz ]
b0 \
bz [
b1 Z
bz Y
b0 X
0W
bz V
b0 U
0T
bz S
b0 R
0Q
bz P
b0 O
0N
bz M
b0 L
0K
bz J
b0 I
0H
bz G
b0 F
0E
bz D
b0 C
0B
0A
0@
0?
0>
b1 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
bx /
b0 .
bz -
1,
b0 +
1*
x)
b0 (
b1 '
b0 &
0%
b0 $
b0 #
b0 "
b0 !
$end
#50000
0*
#150000
b0 /
b0 a
b0 ?"
0)
#250000
1&"
b1 <
b1 j
b1 ~
b1 -
b1 ^
b1 %"
b1 ("
b1 +"
b1 ."
b1 1"
b1 4"
b1 7"
b1 :"
b1 ="
b1 [
b1111 g
b1111 u
b1111 #"
1l
1>
b1 &
b1 .
b1 k
b1 s
b1 $"
1)
#400000
0)
#500000
b1 c
b1 r
b1 }
b1 b
b1 |
b1 !"
b1 e
b1 q
b1 x
b1 z
b10 '
b10 =
b10 Z
b10 B"
b1000 (
b1000 ;
b1000 _
b1000 i
b1000 v
b1000 C"
0&"
b1 D"
b1 +
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz [
b0 <
b0 j
b0 ~
1%
0>
0l
b0 g
b0 u
b0 #"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
b1 $
b1 9
b1 C
b1 '"
1)
#650000
0)
#750000
b1 g
b1 u
b1 #"
0%
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#900000
0)
#1000000
1)"
b10 <
b10 j
b10 ~
b10 -
b10 ^
b10 %"
b10 ("
b10 +"
b10 ."
b10 1"
b10 4"
b10 7"
b10 :"
b10 ="
b10 [
1l
1>
b1111 g
b1111 u
b1111 #"
b1 &
b1 .
b1 k
b1 s
b1 $"
1)
#1150000
0)
#1250000
b10 c
b10 r
b10 }
b10 b
b10 |
b10 !"
b10 e
b10 q
b10 x
b10 z
b11 '
b11 =
b11 Z
b11 B"
b10000 (
b10000 ;
b10000 _
b10000 i
b10000 v
b10000 C"
0)"
b10 +
b10 D"
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz [
b0 <
b0 j
b0 ~
b0 g
b0 u
b0 #"
1%
0>
0l
b10 #
b10 8
b10 F
b10 *"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
1)
#1400000
0)
#1500000
0%
b1 g
b1 u
b1 #"
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#1650000
0)
#1750000
1,"
b100 <
b100 j
b100 ~
b11 -
b11 ^
b11 %"
b11 ("
b11 +"
b11 ."
b11 1"
b11 4"
b11 7"
b11 :"
b11 ="
b11 [
b1111 g
b1111 u
b1111 #"
1l
1>
b1 &
b1 .
b1 k
b1 s
b1 $"
1)
#1900000
0)
#2000000
b11 c
b11 r
b11 }
b11 b
b11 |
b11 !"
b11 e
b11 q
b11 x
b11 z
b100 '
b100 =
b100 Z
b100 B"
b11000 (
b11000 ;
b11000 _
b11000 i
b11000 v
b11000 C"
0,"
b11 D"
b11 +
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz [
b0 <
b0 j
b0 ~
1%
0>
0l
b0 g
b0 u
b0 #"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
b11 "
b11 7
b11 I
b11 -"
1)
#2150000
0)
#2250000
b1 g
b1 u
b1 #"
0%
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#2400000
0)
#2500000
1/"
b1000 <
b1000 j
b1000 ~
b100 -
b100 ^
b100 %"
b100 ("
b100 +"
b100 ."
b100 1"
b100 4"
b100 7"
b100 :"
b100 ="
b100 [
1l
1>
b1111 g
b1111 u
b1111 #"
b1 &
b1 .
b1 k
b1 s
b1 $"
1)
#2650000
0)
#2750000
b0 c
b0 r
b0 }
b0 b
b0 |
b0 !"
b0 e
b0 q
b0 x
b0 z
b101 '
b101 =
b101 Z
b101 B"
b0 (
b0 ;
b0 _
b0 i
b0 v
b0 C"
0/"
b100 +
b100 D"
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz [
b0 <
b0 j
b0 ~
b0 g
b0 u
b0 #"
1%
0>
0l
b100 !
b100 6
b100 L
b100 0"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
1)
#2900000
0)
#3000000
0%
b1 g
b1 u
b1 #"
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#3150000
0)
#3250000
1&"
b1 <
b1 j
b1 ~
b101 -
b101 ^
b101 %"
b101 ("
b101 +"
b101 ."
b101 1"
b101 4"
b101 7"
b101 :"
b101 ="
b101 [
b1111 g
b1111 u
b1111 #"
1l
1>
b1 &
b1 .
b1 k
b1 s
b1 $"
1)
#3400000
0)
#3500000
b1 c
b1 r
b1 }
b1 b
b1 |
b1 !"
b11 d
b11 p
b11 y
b11 {
b1 e
b1 q
b1 x
b1 z
b11 h
b11 t
b11 w
b0 '
b0 =
b0 Z
b0 B"
b11001011 (
b11001011 ;
b11001011 _
b11001011 i
b11001011 v
b11001011 C"
0&"
b101 D"
b101 +
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz [
b0 <
b0 j
b0 ~
1%
0>
0l
b0 g
b0 u
b0 #"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
b101 $
b101 9
b101 C
b101 '"
1)
#3650000
bx /
bx a
bx ?"
0)
#3750000
b11 g
b11 u
b11 #"
0%
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#3900000
0)
#4000000
b10 -
b10 ^
b10 %"
b10 ("
b10 +"
b10 ."
b10 1"
b10 4"
b10 7"
b10 :"
b10 ="
b10 G
1E
b10 :
b10 f
b10 ""
1A
1m
b100 g
b100 u
b100 #"
b11 &
b11 .
b11 k
b11 s
b11 $"
1)
#4150000
b10 /
b10 a
b10 ?"
0)
#4250000
b100 M
b100 -
b100 ^
b100 %"
b100 ("
b100 +"
b100 ."
b100 1"
b100 4"
b100 7"
b100 :"
b100 ="
bz G
1K
0E
b1000 :
b1000 f
b1000 ""
b11 b
b11 |
b11 !"
b101 g
b101 u
b101 #"
1@
0A
1n
b10 1
b10 `
b10 >"
b100 &
b100 .
b100 k
b100 s
b100 $"
1)
#4400000
b110 /
b110 a
b110 ?"
0)
#4500000
bz M
1)"
0K
b10 <
b10 j
b10 ~
b110 -
b110 ^
b110 %"
b110 ("
b110 +"
b110 ."
b110 1"
b110 4"
b110 7"
b110 :"
b110 ="
b110 ]
b0 :
b0 f
b0 ""
1l
1?
0m
0@
b1111 g
b1111 u
b1111 #"
b101 &
b101 .
b101 k
b101 s
b101 $"
b110 0
b110 \
b110 @"
1)
#4650000
b100 /
b100 a
b100 ?"
0)
#4750000
b10 c
b10 r
b10 }
b1 d
b1 p
b1 y
b1 {
b10 e
b10 q
b10 x
b10 z
b1 h
b1 t
b1 w
b1010001 (
b1010001 ;
b1010001 _
b1010001 i
b1010001 v
b1010001 C"
0)"
b110 +
b110 D"
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz ]
b10 b
b10 |
b10 !"
b0 <
b0 j
b0 ~
b0 g
b0 u
b0 #"
1%
0?
0n
0l
b110 #
b110 8
b110 F
b110 *"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
1)
#4900000
b0 /
b0 a
b0 ?"
0)
#5000000
0%
b10 g
b10 u
b10 #"
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#5150000
0)
#5250000
b110 -
b110 ^
b110 %"
b110 ("
b110 +"
b110 ."
b110 1"
b110 4"
b110 7"
b110 :"
b110 ="
b110 G
1,"
1E
b100 <
b100 j
b100 ~
b10 :
b10 f
b10 ""
b1 b
b1 |
b1 !"
b1111 g
b1111 u
b1111 #"
1l
1m
1n
b10 &
b10 .
b10 k
b10 s
b10 $"
1)
#5400000
0)
#5500000
b10 h
b10 t
b10 w
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz G
b10010001 (
b10010001 ;
b10010001 _
b10010001 i
b10010001 v
b10010001 C"
0E
0,"
b111 D"
b111 +
b10 b
b10 |
b10 !"
b0 :
b0 f
b0 ""
b0 <
b0 j
b0 ~
1%
0n
0m
0l
b0 g
b0 u
b0 #"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
b110 "
b110 7
b110 I
b110 -"
1)
#5650000
bx /
bx a
bx ?"
0)
#5750000
b11 g
b11 u
b11 #"
0%
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#5900000
0)
#6000000
b110 -
b110 ^
b110 %"
b110 ("
b110 +"
b110 ."
b110 1"
b110 4"
b110 7"
b110 :"
b110 ="
b110 J
1H
b100 :
b100 f
b100 ""
1A
1m
b100 g
b100 u
b100 #"
b11 &
b11 .
b11 k
b11 s
b11 $"
1)
#6150000
b1000 /
b1000 a
b1000 ?"
0)
#6250000
bz J
b110 G
0H
1E
b10 :
b10 f
b10 ""
b1 b
b1 |
b1 !"
b101 g
b101 u
b101 #"
1@
0A
1n
b110 1
b110 `
b110 >"
b100 &
b100 .
b100 k
b100 s
b100 $"
1)
#6400000
b1100 /
b1100 a
b1100 ?"
0)
#6500000
bz G
1,"
0E
b100 <
b100 j
b100 ~
b1100 -
b1100 ^
b1100 %"
b1100 ("
b1100 +"
b1100 ."
b1100 1"
b1100 4"
b1100 7"
b1100 :"
b1100 ="
b1100 ]
b0 :
b0 f
b0 ""
1l
1?
0m
0@
b1111 g
b1111 u
b1111 #"
b101 &
b101 .
b101 k
b101 s
b101 $"
b1100 0
b1100 \
b1100 @"
1)
#6650000
b10010 /
b10010 a
b10010 ?"
0)
#6750000
b11 c
b11 r
b11 }
b11 e
b11 q
b11 x
b11 z
b10011001 (
b10011001 ;
b10011001 _
b10011001 i
b10011001 v
b10011001 C"
0,"
b1000 +
b1000 D"
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz ]
b11 b
b11 |
b11 !"
b0 <
b0 j
b0 ~
b0 g
b0 u
b0 #"
1%
0?
0n
0l
b1100 "
b1100 7
b1100 I
b1100 -"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
1)
#6900000
bx /
bx a
bx ?"
0)
#7000000
0%
b11 g
b11 u
b11 #"
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#7150000
0)
#7250000
b100 -
b100 ^
b100 %"
b100 ("
b100 +"
b100 ."
b100 1"
b100 4"
b100 7"
b100 :"
b100 ="
b100 M
1K
b1000 :
b1000 f
b1000 ""
b100 g
b100 u
b100 #"
1A
1m
b11 &
b11 .
b11 k
b11 s
b11 $"
1)
#7400000
b1010 /
b1010 a
b1010 ?"
0)
#7500000
bz M
b110 -
b110 ^
b110 %"
b110 ("
b110 +"
b110 ."
b110 1"
b110 4"
b110 7"
b110 :"
b110 ="
b110 G
0K
1E
b10 :
b10 f
b10 ""
b1 b
b1 |
b1 !"
1@
0A
1n
b101 g
b101 u
b101 #"
b100 &
b100 .
b100 k
b100 s
b100 $"
b100 1
b100 `
b100 >"
1)
#7650000
0)
#7750000
bz G
1/"
0E
b1000 <
b1000 j
b1000 ~
b1010 -
b1010 ^
b1010 %"
b1010 ("
b1010 +"
b1010 ."
b1010 1"
b1010 4"
b1010 7"
b1010 :"
b1010 ="
b1010 ]
b0 :
b0 f
b0 ""
b1111 g
b1111 u
b1111 #"
1l
1?
0m
0@
b1010 0
b1010 \
b1010 @"
b101 &
b101 .
b101 k
b101 s
b101 $"
1)
#7900000
b1110 /
b1110 a
b1110 ?"
0)
#8000000
b0 c
b0 r
b0 }
b11 d
b11 p
b11 y
b11 {
b0 e
b0 q
b0 x
b0 z
b11 h
b11 t
b11 w
b11000011 (
b11000011 ;
b11000011 _
b11000011 i
b11000011 v
b11000011 C"
0/"
b1001 D"
b1001 +
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz ]
b0 b
b0 |
b0 !"
b0 <
b0 j
b0 ~
1%
0?
0n
0l
b0 g
b0 u
b0 #"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
b1010 !
b1010 6
b1010 L
b1010 0"
1)
#8150000
bx /
bx a
bx ?"
0)
#8250000
b11 g
b11 u
b11 #"
0%
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#8400000
0)
#8500000
b101 -
b101 ^
b101 %"
b101 ("
b101 +"
b101 ."
b101 1"
b101 4"
b101 7"
b101 :"
b101 ="
b101 D
1B
b1 :
b1 f
b1 ""
1A
1m
b100 g
b100 u
b100 #"
b11 &
b11 .
b11 k
b11 s
b11 $"
1)
#8650000
b1 /
b1 a
b1 ?"
0)
#8750000
b1010 M
b1010 -
b1010 ^
b1010 %"
b1010 ("
b1010 +"
b1010 ."
b1010 1"
b1010 4"
b1010 7"
b1010 :"
b1010 ="
bz D
1K
0B
b1000 :
b1000 f
b1000 ""
b11 b
b11 |
b11 !"
b101 g
b101 u
b101 #"
1@
0A
1n
b101 1
b101 `
b101 >"
b100 &
b100 .
b100 k
b100 s
b100 $"
1)
#8900000
b1111 /
b1111 a
b1111 ?"
0)
#9000000
bz M
1&"
0K
b1 <
b1 j
b1 ~
b1111 -
b1111 ^
b1111 %"
b1111 ("
b1111 +"
b1111 ."
b1111 1"
b1111 4"
b1111 7"
b1111 :"
b1111 ="
b1111 ]
b0 :
b0 f
b0 ""
1l
1?
0m
0@
b1111 g
b1111 u
b1111 #"
b101 &
b101 .
b101 k
b101 s
b101 $"
b1111 0
b1111 \
b1111 @"
1)
#9150000
b1010 /
b1010 a
b1010 ?"
0)
#9250000
b0 d
b0 p
b0 y
b0 {
b100 h
b100 t
b100 w
b100000000 (
b100000000 ;
b100000000 _
b100000000 i
b100000000 v
b100000000 C"
0&"
b1010 +
b1010 D"
bz -
bz ^
bz %"
bz ("
bz +"
bz ."
bz 1"
bz 4"
bz 7"
bz :"
bz ="
bz ]
b0 b
b0 |
b0 !"
b0 <
b0 j
b0 ~
b0 g
b0 u
b0 #"
1%
0?
0n
0l
b1111 $
b1111 9
b1111 C
b1111 '"
b1111 &
b1111 .
b1111 k
b1111 s
b1111 $"
1)
#9400000
b0 /
b0 a
b0 ?"
0)
#9500000
0%
b110 g
b110 u
b110 #"
b0 &
b0 .
b0 k
b0 s
b0 $"
1)
#9650000
0)
#9750000
b110 &
b110 .
b110 k
b110 s
b110 $"
1)
#9900000
0)
#10000000
1)
